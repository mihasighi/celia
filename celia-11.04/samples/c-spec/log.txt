File cinv.txt found, read input values for analysis
File cinv-ucons.txt not found, set default data domain for analysis with ucons

vvvvvvvvvv sorted_insert (ok expected) vvvvvvvvvv

 	 alloc top returns 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


vvvvv top:<file:f_0.shp>


****shape_approximate: algo=1296

****shape_approximate: set max_anon=0, segm_anon=1

****ucons_approximate: algorithm=1296 set max_anon=0, segm_anon=1 patt = 5
 active patterns in aproximate active 1active 4
====shape_pcons_of_tcons: with c=(x4 -_i,? 0 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? 0), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295

====shape_pcons_of_tcons: with c=(cast_q,-oo(x4) +_i,n 20 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,-oo(x4) +_i,n 20), type=(5)

++++shape_set_pexpr: for dim=4, offset=-6

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \ucons(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \ucons(x4) ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \ucons(x4) ]
, ]
on <file:f_1.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 top" ;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=1
 0 ->  0

===dst: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            2 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \ucons(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 + 20

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 + 20 = 0


 @@ucons_meet_lincons_array [0] 
:=x2 + 20 = 0
@@@@ ucons_meet_lincons: with lincons=(x2 + 20 = 0) 
 and offset (lcons->scalar): -6
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-6
@@@@ ucons_meet_licons: lexpr=(x2)
@@@@ [ucons_]build_constraint: with code=(20)
 and lexpr=[x2]

@@@@ ucons_build sorted(n1) && \forall y:[n1]. d(y) <= d(256)

 Returned pattern 3 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 Returned pattern 0 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 build_constraint returns:
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

****shape_meet_tcons_array returns: <file:f_2.shp>


vvvvv pre:<file:f_3.shp>


====shape_pcons_of_tcons: with c=(x3 -_i,? 0 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x3 -_i,? 0), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295

====shape_pcons_of_tcons: with c=(x4 -_i,? x3 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? x3), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x3
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x3

====shape_pcons_of_tcons: with c=(x4 -_i,? x1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? x1), type=(5)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 == x1
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 == x1

====shape_pcons_of_tcons: with c=(cast_q,+oo(x4) -_i,n 1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,+oo(x4) -_i,n 1), type=(5)

++++shape_set_pexpr: for dim=4, offset=-3

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]


====shape_pcons_of_tcons: with c=(cast_i,n(x3) -_i,n cast_i,n(x4) >= 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_i,n(x3) -_i,n cast_i,n(x4)), type=(8)

++++shape_set_pexpr: for dim=3, offset=-2

++++shape_set_pexpr: for dim=4, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  \data(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  \data(x4) ]


====shape_pcons_of_tcons: with c=(cast_q,-oo(x3) +_i,n 20 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,-oo(x3) +_i,n 20), type=(5)

++++shape_set_pexpr: for dim=3, offset=-6

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x4 --> x3, 
====shape_pcons_fdump: dim=(1,4)
x4 == x1, 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]
,
	
====shape_pcons_fdump: dim=(1,4)
x3 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  \data(x4) ]
, 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]
, ]
on <file:f_4.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 top" ;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=1
 0 ->  0

===dst: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            2 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 --> x3)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=2
 0 ->  0
 1 ->  1

===dst: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            3 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x3 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x3 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x3 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x6)

 intersection with classic lincons :=array of constraints of size 1
 0: x6 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x6 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 == x1)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons_ptr_eq: nnx=2, nny=4294967294

!!!!hgraph_node_sort: on a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n2) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) from 1 with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)

!!!!hgraph_node_sort: returns a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
) and perm=(dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)
===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)

====shape_dimperm_copy: 
===src: dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1

===dst: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  2

  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 = 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 = 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 = 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x5)

 intersection with classic lincons :=array of constraints of size 1
 0: x5 - 1 = 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x5 - 1 = 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  \data(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: -x2 + x3

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: -x2 + x3 >= 0


 @@ucons_meet_lincons_array [0] 
:=-x2 + x3 >= 0
@@@@ ucons_meet_lincons: with lincons=(-x2 + x3 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(-x2 + x3)

 intersection with classic lincons :=array of constraints of size 1
 0: -x2 + x3 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: -x2 + x3 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x3 + 20

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x3 + 20 = 0


 @@ucons_meet_lincons_array [0] 
:=x3 + 20 = 0
@@@@ ucons_meet_lincons: with lincons=(x3 + 20 = 0) 
 and offset (lcons->scalar): -6
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-6
@@@@ ucons_meet_licons: lexpr=(x3)
@@@@ [ucons_]build_constraint: with code=(20)
 and lexpr=[x3]

@@@@ ucons_build sorted(n2) && \forall y:[n2]. d(y) <= d(256)

 Returned pattern 3 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 Returned pattern 0 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 build_constraint returns:
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

****shape_meet_tcons_array returns: <file:f_5.shp>


====shape_pcons_of_tcons: with c=(x4 -_i,? 0 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? 0), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295

====shape_pcons_of_tcons: with c=(x4 -_i,? x1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? x1), type=(5)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 == x1
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 == x1

====shape_pcons_of_tcons: with c=(cast_q,+oo(x4) -_i,n 1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,+oo(x4) -_i,n 1), type=(5)

++++shape_set_pexpr: for dim=4, offset=-3

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x4 == x1, 
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]
, ]
on <file:f_6.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 --> x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 top" ;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=1
 0 ->  0

===dst: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            2 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 == x1)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons_ptr_eq: nnx=1, nny=4294967294
===== ushape_apply_dimperm: with perm=(dimperm: size=2
 0 ->  0
 1 ->  1
)

++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  x3  \length(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 = 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 = 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 = 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 = 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 = 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

****shape_meet_tcons_array returns: <file:f_7.shp>


====shape_pcons_of_tcons: with c=(x1 -_i,? 0 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x1 -_i,? 0), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 --> x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 --> x4294967295

====shape_pcons_of_tcons: with c=(x4 -_i,? x1 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? x1), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1

====shape_pcons_of_tcons: with c=(cast_q,+oo(x1) -_i,n 1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,+oo(x1) -_i,n 1), type=(5)

++++shape_set_pexpr: for dim=1, offset=-3

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]


====shape_pcons_of_tcons: with c=(cast_i,n(x1) -_i,n cast_i,n(x4) >= 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_i,n(x1) -_i,n cast_i,n(x4)), type=(8)

++++shape_set_pexpr: for dim=1, offset=-2

++++shape_set_pexpr: for dim=4, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]


====shape_pcons_of_tcons: with c=(cast_q,-oo(x4) -_i,n cast_i,n(x1) +_i,n 20 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,-oo(x4) -_i,n cast_i,n(x1) +_i,n 20), type=(5)

++++shape_set_pexpr: for dim=4, offset=-6

++++shape_set_pexpr: for dim=1, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x1 --> x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1, 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]
, 
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]
,
	
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]
, ]
on <file:f_8.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 --> x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 top" ;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=1
 0 ->  0

===dst: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            2 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 --> x1)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=2
 0 ->  0
 1 ->  1

===dst: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            3 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x3 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x3 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x3 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x6)

 intersection with classic lincons :=array of constraints of size 1
 0: x6 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x6 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 = 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 = 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 = 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x5)

 intersection with classic lincons :=array of constraints of size 1
 0: x5 - 1 = 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x5 - 1 = 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - x3

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - x3 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - x3 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - x3 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(x2 - x3)

 intersection with classic lincons :=array of constraints of size 1
 0: x2 - x3 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x2 - x3 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: -x2 + x3 + 20

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: -x2 + x3 + 20 = 0


 @@ucons_meet_lincons_array [0] 
:=-x2 + x3 + 20 = 0
@@@@ ucons_meet_lincons: with lincons=(-x2 + x3 + 20 = 0) 
 and offset (lcons->scalar): -6
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-6
@@@@ ucons_meet_licons: lexpr=(-x2 + x3)
@@@@ [ucons_]build_constraint: with code=(20)
 and lexpr=[-x2 + x3]

@@@@ ucons_build sorted(n2) && \forall y:[n2]. d(y) <= d(2)

 Returned pattern 3 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 Returned pattern 0 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 build_constraint returns:
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n4294967294) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

****shape_meet_tcons_array returns: <file:f_9.shp>


====shape_pcons_of_tcons: with c=(x3 -_i,? 0 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x3 -_i,? 0), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295

====shape_pcons_of_tcons: with c=(x1 -_i,? x3 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x1 -_i,? x3), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 --> x3
===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 --> x3

====shape_pcons_of_tcons: with c=(x4 -_i,? x1 > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x4 -_i,? x1), type=(8)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1
===returns: 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1

====shape_pcons_of_tcons: with c=(cast_q,+oo(x1) -_i,n 1 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,+oo(x1) -_i,n 1), type=(5)

++++shape_set_pexpr: for dim=1, offset=-3

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]


====shape_pcons_of_tcons: with c=(cast_i,n(x1) -_i,n cast_i,n(x4) >= 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_i,n(x1) -_i,n cast_i,n(x4)), type=(8)

++++shape_set_pexpr: for dim=1, offset=-2

++++shape_set_pexpr: for dim=4, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]


====shape_pcons_of_tcons: with c=(cast_i,n(x3) -_i,n cast_i,n(x1) >= 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_i,n(x3) -_i,n cast_i,n(x1)), type=(8)

++++shape_set_pexpr: for dim=3, offset=-2

++++shape_set_pexpr: for dim=1, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x3 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  \data(x3)  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x3 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  \data(x3)  x4 ]


====shape_pcons_of_tcons: with c=(cast_q,-oo(x4) -_i,n cast_i,n(x1) +_i,n 20 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,-oo(x4) -_i,n cast_i,n(x1) +_i,n 20), type=(5)

++++shape_set_pexpr: for dim=4, offset=-6

++++shape_set_pexpr: for dim=1, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]


====shape_pcons_of_tcons: with c=(cast_q,-oo(x3) +_i,n 20 = 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(cast_q,-oo(x3) +_i,n 20), type=(5)

++++shape_set_pexpr: for dim=3, offset=-6

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x1 --> x3, 
====shape_pcons_fdump: dim=(1,4)
x4 --> x1, 
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]
,
	
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]
, 
====shape_pcons_fdump: dim=(1,4)
-x1 + x3 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  \data(x3)  x4 ]
, 
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]
, 
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]
,
	]
on <file:f_10.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 --> x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 top" ;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=1
 0 ->  0

===dst: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            2 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=1)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (3,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x4 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
empty array of constraints
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x4 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 --> x3)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n4294967294) */
	/* x2(n4294967294) */
	/* x3(n1) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=2
 0 ->  0
 1 ->  2

===dst: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  3


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            3 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x5)

 intersection with classic lincons :=array of constraints of size 1
 0: x5 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x5 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x4 --> x1)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n4294967294) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_dimperm_copy: 
===src: dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2

===dst: dimperm: size=5
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
 4 ->  4


++++ushape_apply_dimperm_dimchange: with dimchange=(dimchange: intdim=0, realdim=1
            4 
) on scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimchange scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_apply_dimperm_dimchange: after dimperm scons=(

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x4 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x4 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x4 - 1 >= 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x8)

 intersection with classic lincons :=array of constraints of size 1
 0: x8 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 2
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x8 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 - 1 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \length(x1)  x2  x3  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - 1 = 0


 @@ucons_meet_lincons_array [0] 
:=x2 - 1 = 0
@@@@ ucons_meet_lincons: with lincons=(x2 - 1 = 0) 
 and offset (lcons->scalar): -3
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-3
@@@@ ucons_meet_licons: lexpr=(x6)

 intersection with classic lincons :=array of constraints of size 1
 0: x6 - 1 = 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n3] - 1 >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x6 - 1 = 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x1 - x4 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \data(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: x2 - x4

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x2 - x4 >= 0


 @@ucons_meet_lincons_array [0] 
:=x2 - x4 >= 0
@@@@ ucons_meet_lincons: with lincons=(x2 - x4 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(x2 - x4)

 intersection with classic lincons :=array of constraints of size 1
 0: x2 - x4 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x2 - x4 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
-x1 + x3 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  \data(x3)  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: -x2 + x3

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: -x2 + x3 >= 0


 @@ucons_meet_lincons_array [0] 
:=-x2 + x3 >= 0
@@@@ ucons_meet_lincons: with lincons=(-x2 + x3 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(-x2 + x3)

 intersection with classic lincons :=array of constraints of size 1
 0: -x2 + x3 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n3] - 1 >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: -x2 + x3 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
-x1 + x4 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ \data(x1)  x2  x3  \ucons(x4) ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


====shape_linexpr_of_node: -x2 + x4 + 20

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: -x2 + x4 + 20 = 0


 @@ucons_meet_lincons_array [0] 
:=-x2 + x4 + 20 = 0
@@@@ ucons_meet_lincons: with lincons=(-x2 + x4 + 20 = 0) 
 and offset (lcons->scalar): -6
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
)
@@@@ ucons_meet_lincons: kind=-6
@@@@ ucons_meet_licons: lexpr=(-x2 + x4)
@@@@ [ucons_]build_constraint: with code=(20)
 and lexpr=[-x2 + x4]

@@@@ ucons_build sorted(n3) && \forall y:[n3]. d(y) <= d(2)

 Returned pattern 3 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 Returned pattern 0 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 build_constraint returns:
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 + 20 = 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \ucons(x3)  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


====shape_linexpr_of_node: x3 + 20

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x3 + 20 = 0


 @@ucons_meet_lincons_array [0] 
:=x3 + 20 = 0
@@@@ ucons_meet_lincons: with lincons=(x3 + 20 = 0) 
 and offset (lcons->scalar): -6
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
)
@@@@ ucons_meet_lincons: kind=-6
@@@@ ucons_meet_licons: lexpr=(x3)
@@@@ [ucons_]build_constraint: with code=(20)
 and lexpr=[x3]

@@@@ ucons_build sorted(n2) && \forall y:[n2]. d(y) <= d(256)

 Returned pattern 3 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 Returned pattern 0 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 build_constraint returns:
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n4294967294) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
]

****shape_meet_tcons_array returns: <file:f_11.shp>


****shape_join: on <file:f_12.shp>
 and <file:f_13.shp>


****shape_join returns: <file:f_14.shp>


****shape_join: on <file:f_15.shp>
 and <file:f_16.shp>


****shape_join returns: <file:f_17.shp>


****shape_join: on <file:f_18.shp>
 and <file:f_19.shp>


****shape_join returns: <file:f_20.shp>


vvvvv inv:<file:f_21.shp>


vvvvv init program

====shape_pcons_of_texpr: with dim=(1,4), e=(x4), type=(8)

****shape_assign_texpr_array: with assign=[x1 := x4,  ]
  on <file:f_22.shp>


====ushape_assign_passign: with passign=(x1 := x4)
===== ushape_apply_dimperm: with perm=(dimperm: size=2
 0 ->  0
 1 ->  1
)

****shape_assign_texpr_array returns:<file:f_23.shp>


====shape_pcons_of_texpr: with dim=(1,4), e=(cast_f,n(x4)), type=(8)

****shape_assign_texpr_array: with assign=[x3 := cast_f,n(x4),  ]
  on <file:f_24.shp>


====ushape_assign_passign: with passign=(x3 := x4->next)

 singleton 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


 remove_pattern_n2p 

key->type 3 
key->segm[0] 1 


 remove_pattern_n2p returns 


 remove_pattern_n2p 

key->type 0 
key->segm[0] 1 


 remove_pattern_n2p returns 


 singleton returns: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


 expand returns 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

===== ushape_apply_dimperm: with perm=(dimperm: size=2
 0 ->  0
 1 ->  1
)
	 split: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

	 actually split: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

	 pattern: 

 type 3 segment 1 	 pattern: 

 type 0 segment 1 	 econs_aux : 
polyhedron of dim (7,0)
array of constraints of size 2
 0: -x2 + x3 >= 0
 1: x5 - 2 >= 0

	 split patterns of : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (9,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

 resulting: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 1
 0: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 3
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 2
 0: -d(n1) + d(y1) >= 0
 1: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

	 n1_pat_set.size is 2 

	 n1 = 1 j= 0 
	 w.r.t. pattern: 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 

	 pattern: 

 type 3 segment 1 	 => aux : 
polyhedron of dim (11,0)
array of constraints of size 4
 0: -x7 + x8 >= 0
 1: -x9 + x10 >= 0
 2: x7 - 1 >= 0
 3: x5 - 2 >= 0


 	 temp_data after y1 - 1 = 0 and dy1 - dn2 = 0 : 
polyhedron of dim (11,0)
array of constraints of size 5
 0: -x3 + x9 = 0
 1: x7 - 1 = 0
 2: -x3 + x10 >= 0
 3: x8 - 1 >= 0
 4: x5 - 2 >= 0


 	 temp_data after removed y1 and dy1 
polyhedron of dim (9,0)
array of constraints of size 3
 0: -x3 + x8 >= 0
 1: x7 - 1 >= 0
 2: x5 - 2 >= 0


 	 temp_data after incremeted y1 
polyhedron of dim (9,0)
array of constraints of size 3
 0: -x3 + x8 >= 0
 1: x7 - 1 >= 0
 2: x5 - 2 >= 0


 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 

	 pattern: 

 type 0 segment 2 	 => aux : 
polyhedron of dim (9,0)
array of constraints of size 3
 0: -x3 + x8 >= 0
 1: x7 - 1 >= 0
 2: x5 - 2 >= 0


 remove_pattern_n2p 

key->type 3 
key->segm[0] 1 


 remove_pattern_n2p returns 


	 n1 = 1 j= 1 
	 w.r.t. pattern: 
	 pattern: 

 type 0 segment 1 	 => aux : 
polyhedron of dim (9,0)
array of constraints of size 3
 0: -x2 + x8 >= 0
 1: x7 - 1 >= 0
 2: x5 - 2 >= 0


 remove_pattern_n2p 

key->type 0 
key->segm[0] 1 


 remove_pattern_n2p returns 

	 split before update lenghts : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 2
 0: -d(n1) + d(n2) >= 0
 1: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n1) + d(n2) >= 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: y1 - 1 >= 0
 4: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: -d(n1) + d(y1) >= 0
 1: -d(n1) + d(n2) >= 0
 2: y1 - 1 >= 0
 3: l[n1] - 2 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

	 split returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


 expand returns 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

****shape_assign_texpr_array returns:<file:f_25.shp>


vvvvv init:<file:f_26.shp>


	shape_is_leq: args <file:f_27.shp>
 and <file:f_28.shp>

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

 ucons_leq returns true
+++++ushape_is_leq: returns 1

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

 ucons_leq returns false
+++++ushape_is_leq: returns 0

	shape_is_leq: returns 0

vvvvv init => inv: not satisfied (ERROR)

====shape_pcons_of_tcons: with c=(x3 -_i,? 0"ERROR in ap_tcons0_fprint")

====shape_pcons_of_texpr: with dim=(1,4), e=(x3 -_i,? 0), type=(6)

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295
===returns: 
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295

====shape_pcons_of_tcons: with c=(x0 -_i,n cast_i,n(x3) > 0)

====shape_pcons_of_texpr: with dim=(1,4), e=(x0 -_i,n cast_i,n(x3)), type=(8)

++++shape_set_pexpr: for dim=3, offset=-2

==shape_pcons_of_texpr: for dim=(1,4) returns ()

====shape_pcons_add: 
====shape_pcons_fdump: dim=(1,4)
x0 - x3 - 1 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  x4 ]

===returns: 
====shape_pcons_fdump: dim=(1,4)
x0 - x3 - 1 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  x4 ]


****shape_meet_tcons_array: with constraint [ 
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295, 
====shape_pcons_fdump: dim=(1,4)
x0 - x3 - 1 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  x4 ]
, ]
on <file:f_29.shp>


++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_meet_pcons_ptr_neq: nnx=2, nny=0

++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x0 - x3 - 1 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


====shape_linexpr_of_node: x0 - x3 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x0 - x3 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x0 - x3 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x0 - x3 - 1 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(x0 - x3)

 intersection with classic lincons :=array of constraints of size 1
 0: x0 - x3 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x0 - x3 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons_ptr_neq: nnx=0, nny=0

++++ushape_meet_pcons returns: null

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}


++++ushape_meet_pcons_ptr_neq: nnx=0, nny=0

++++ushape_meet_pcons returns: null

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x3 != x4294967295)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons_ptr_neq: nnx=2, nny=0

++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

++++ushape_meet_pcons: with pcons=(
====shape_pcons_fdump: dim=(1,4)
x0 - x3 - 1 >= 0
====shape_offsets_fprint: dim=(4)
 offsets = [ x1  x2  \data(x3)  x4 ]
)
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


====shape_linexpr_of_node: x0 - x3 - 1

 ENTER ucons_meet_lincons_array 
:=
 @@ucons_meet_lincons_array 
:=array of constraints of size 1
 0: x0 - x3 - 1 >= 0


 @@ucons_meet_lincons_array [0] 
:=x0 - x3 - 1 >= 0
@@@@ ucons_meet_lincons: with lincons=(x0 - x3 - 1 >= 0) 
 and offset (lcons->scalar): -2
 on a=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) and r=(
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
)
@@@@ ucons_meet_lincons: kind=-2
@@@@ ucons_meet_licons: lexpr=(x0 - x3)

 intersection with classic lincons :=array of constraints of size 1
 0: x0 - x3 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


====ucons_meet_lincons builds arr=(array of constraints of size 1
 0: x0 - x3 - 1 >= 0
) returns: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
 3: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_meet_pcons returns: array of size 1 and elements [
	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
 3: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
]

****shape_meet_tcons_array returns: <file:f_30.shp>


====shape_pcons_of_texpr: with dim=(1,4), e=(0), type=(8)

****shape_assign_texpr_array: with assign=[x1 := 0,  ]
  on <file:f_31.shp>


====ushape_assign_passign: with passign=(x1 := x4294967295)

++++ushape_assign_null: with a=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
)

!!!!hgraph_close_garbage: newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=4294967294,nn=4294967294,s=0)
newinfo[2]=(v=2,nn=0,s=0)
newinfo[3]=(v=3,nn=0,s=1))

!!!!hgraph_close_garbage: after marking newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=3,nn=1,s=2)
newinfo[2]=(v=2,nn=0,s=0)
newinfo[3]=(v=3,nn=0,s=1))

!!!!hgraph_close_garbage: before sort=(
	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x4^(1) | [ ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;
) with ngarbage=0 and perm=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
)

!!!!hgraph_node_sort: on a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x4^(1) | [ ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;
) from 1 with perm=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
dimperm: size=4
 0 ->  0
 1 ->  2
 2 ->  1
 3 ->  3
dimperm: size=4
 0 ->  0
 1 ->  2
 2 ->  1
 3 ->  3
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=4
 0 ->  0
 1 ->  2
 2 ->  1
 3 ->  3
dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  2
dimperm: size=4
 0 ->  0
 1 ->  3
 2 ->  1
 3 ->  2
)

!!!!hgraph_node_sort: returns a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(1) | [ ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n3;
	h_0_n3 -> h_0_n1;
) and perm=(dimperm: size=4
 0 ->  0
 1 ->  3
 2 ->  1
 3 ->  2
)

!!!!hgraph_is_closed: (0,1)

!!!!hgraph_close_anonymous: infos about anons=([0]: 2-->3,)

!!!!hgraph_close_anonymous: new hgraph (unsorted)=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	h_0_n3 [label=" n3 |  TOP | [ ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	h_0_n3 -> h_0_n0;
) with nanon=1 and perm1=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  0
)

!!!!hgraph_node_sort: on a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	h_0_n3 [label=" n3 |  TOP | [ ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	h_0_n3 -> h_0_n0;
) from 1 with perm=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  0
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  3
)

!!!!hgraph_node_sort: returns a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	h_0_n3 [label=" n3 |  TOP | [ ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	h_0_n3 -> h_0_n0;
) and perm=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  0
)

!!!!hgraph_close_anonymous: new hgraph (sorted)=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) and new perm (sorted)=(dimperm: size=4
 0 ->  0
 1 ->  0
 2 ->  1
 3 ->  2
)

++++ushape_assign_null: apply perm=[dimperm: size=4
 0 ->  0
 1 ->  0
 2 ->  1
 3 ->  2
] and anon=[2(3),]

++++ushape_fold_internal: with anon [2(3),]

++++ushape_fold_internal: permutation [dimperm: size=5
 0 ->  0
 1 ->  1
 2 ->  4
 3 ->  3
 4 ->  2
]
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 pr->segm_anon = 1 
	 fold: 
	 tdim =  	 2 	 4 
 on

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 
 size_fold_dim=2 	 fold_dim:	 2 	 4   
	 fold : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 tdim =  	 1 	 3 

 CONCAT: 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 concat_P11 : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	concat_P11 aux_dcons: 


 CONCAT_P11 retuns: 	 polyhedron of dim (11,0)
array of constraints of size 8
 0: -x4 + x10 = 0
 1: -x6 + x9 = 0
 2: x8 - 1 = 0
 3: -x2 + x4 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x3 - x4 >= 0
 7: x0 - x3 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
  
	 concat_P12 : 
 1  3 on: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


 concat 1 val currenta cu patternul P12. 1

 border : 1polyhedron of dim (13,0)
array of constraints of size 7
 0: x8 - 1 = 0
 1: -x2 + x11 >= 0
 2: x7 - 1 >= 0
 3: x6 - 1 >= 0
 4: x4 - x11 >= 0
 5: x3 - x4 >= 0
 6: x0 - x3 - 1 >= 0


 border_left_i: 1polyhedron of dim (13,0)
array of constraints of size 9
 0: -x4 + x12 = 0
 1: -x6 + x10 = 0
 2: x8 - 1 = 0
 3: -x2 + x11 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x4 - x11 >= 0
 7: x3 - x4 >= 0
 8: x0 - x3 - 1 >= 0


 concat 3: 1polyhedron of dim (13,0)
array of constraints of size 9
 0: -x4 + x12 = 0
 1: -x6 + x10 = 0
 2: x8 - 1 = 0
 3: -x2 + x11 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x4 - x11 >= 0
 7: x3 - x4 >= 0
 8: x0 - x3 - 1 >= 0


 concat 4.1polyhedron of dim (13,0)
array of constraints of size 9
 0: -x4 + x12 = 0
 1: -x6 + x10 = 0
 2: x8 - 1 = 0
 3: -x2 + x11 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x4 - x11 >= 0
 7: x3 - x4 >= 0
 8: x0 - x3 - 1 >= 0


 	 concat P12 returns 
 polyhedron of dim (13,0)
array of constraints of size 9
 0: -x4 + x12 = 0
 1: -x6 + x10 = 0
 2: x8 - 1 = 0
 3: -x2 + x11 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x4 - x11 >= 0
 7: x3 - x4 >= 0
 8: x0 - x3 - 1 >= 0


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

 concat_nodes_2 before recalc lengths 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 1 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 1 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


 pattern_type := 3x6 + x8polyhedron of dim (13,0)
array of constraints of size 7
 0: x8 - 1 = 0
 1: -x2 + x4 >= 0
 2: -x11 + x12 >= 0
 3: x7 - 1 >= 0
 4: x6 - 1 >= 0
 5: x3 - x4 >= 0
 6: x0 - x3 - 1 >= 0

 2 nr_y = 2, l0=6

 pattern_type := 0x6 + x8polyhedron of dim (11,0)
array of constraints of size 7
 0: x8 - 1 = 0
 1: -x2 + x10 >= 0
 2: x7 - 1 >= 0
 3: x6 - 1 >= 0
 4: x4 - x10 >= 0
 5: x3 - x4 >= 0
 6: x0 - x3 - 1 >= 0

 1 nr_y = 1,l0=6

 pattern_type := 3x6 + x8polyhedron of dim (13,0)
array of constraints of size 8
 0: x8 - 1 = 0
 1: -x2 + x4 >= 0
 2: -x9 + x10 >= 0
 3: -x11 + x12 >= 0
 4: x7 - 1 >= 0
 5: x6 - 1 >= 0
 6: x3 - x4 >= 0
 7: x0 - x3 - 1 >= 0

 2 nr_y = 2, l0=6

 pattern_type := 0x6 + x8polyhedron of dim (11,0)
array of constraints of size 7
 0: x8 - 1 = 0
 1: -x2 + x4 >= 0
 2: -x3 + x10 >= 0
 3: x7 - 1 >= 0
 4: x6 - 1 >= 0
 5: x3 - x4 >= 0
 6: x0 - x3 - 1 >= 0

 1 nr_y = 1,l0=6

 concat_nodes_2 returs 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 fold returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 tdim =  	 1 	 3 
	 fold returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_fold_internal: after folding 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

++++ushape_fold_internal: reverse permutation [dimperm: size=5
 0 ->  0
 1 ->  1
 2 ->  4
 3 ->  3
 4 ->  2
]
  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n2) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n3) - d(y1) >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n2) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n3] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n2) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_fold_internal: after permute 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_assign_null: after fold: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

===== ushape_apply_dimperm: with perm=(dimperm: size=4
 0 ->  0
 1 ->  0
 2 ->  1
 3 ->  2
)

====shape_dimperm_copy: 
===src: dimperm: size=4
 0 ->  0
 1 ->  0
 2 ->  1
 3 ->  2

===dst: dimperm: size=5
 0 ->  0
 1 ->  1
 2 ->  1
 3 ->  2
 4 ->  3

  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_remove: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 2 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 2 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


====shape_dimchange_sort: [2,6,]

===returns: [2,6,]
  
	 remove: 
  
	 pattern looked in the list: 
rt->key.segments[0]=2 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 

  
	 remove: 
  
	 pattern looked in the list: 
rt->key.segments[0]=2 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 

  
	 remove: 
  
	 pattern looked in the list: 
rt->key.segments[0]=1 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 

  
	 remove: 
  
	 pattern looked in the list: 
rt->key.segments[0]=1 

 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 ucons_remove dimensions returns: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


++++ushape_assign_null returns: after dimperm: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


====ushape_assign_passign: with passign=(x1 := x4294967295)

++++ushape_assign_null: with a=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
 3: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
)

!!!!hgraph_close_garbage: newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=3,nn=0,s=2)
newinfo[2]=(v=2,nn=0,s=0))

!!!!hgraph_close_garbage: after marking newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=3,nn=0,s=2)
newinfo[2]=(v=2,nn=0,s=0))

!!!!hgraph_close_garbage: before sort=(
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
) with ngarbage=0 and perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: on a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x4^(0) | [ x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
) from 1 with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)

!!!!hgraph_node_sort: returns a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) and perm=(dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)

!!!!hgraph_is_closed: (0,1)

++++ushape_assign_null: apply perm=[dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
] and anon=[]

++++ushape_assign_null: after fold: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}
	scons_0_0 [label="[NULL]"] ;

===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1
)

====shape_dimperm_copy: 
===src: dimperm: size=3
 0 ->  0
 1 ->  2
 2 ->  1

===dst: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  2

  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
 3: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
 3: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
 5: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
 4: x0 - d(n2) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 = 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n2] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n2] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 = 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n2] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n2] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


++++ushape_assign_null returns: after dimperm: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n0) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x1 x2 ]" ] ;
	h_0_n1 [label=" n1 |  x3^(0) | [ x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 = 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n2] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n2] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


 	 join a1 
 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 = 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n2] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n2] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

 	 with  a2 
 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 2 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 


 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 


 	 join returns  
 
	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


****shape_assign_texpr_array returns:<file:f_32.shp>


====shape_pcons_of_texpr: with dim=(1,4), e=(x3), type=(8)

****shape_assign_texpr_array: with assign=[x1 := x3,  ]
  on <file:f_33.shp>


====ushape_assign_passign: with passign=(x1 := x3)
===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

****shape_assign_texpr_array returns:<file:f_34.shp>


====shape_pcons_of_texpr: with dim=(1,4), e=(0), type=(8)

****shape_assign_texpr_array: with assign=[x3 := 0,  ]
  on <file:f_35.shp>


====ushape_assign_passign: with passign=(x3 := x4294967295)

++++ushape_assign_null: with a=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n1) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x3 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}
)

!!!!hgraph_close_garbage: newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=0,nn=0,s=0)
newinfo[2]=(v=3,nn=0,s=1))

!!!!hgraph_close_garbage: after marking newinfo=(
newinfo[0]=(v=4294967295,nn=0,s=0)
newinfo[1]=(v=0,nn=0,s=0)
newinfo[2]=(v=3,nn=0,s=1))

!!!!hgraph_close_garbage: before sort=(
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) with ngarbage=0 and perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: on a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) from 1 with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: (perm1, permj, perm2)=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_node_sort: returns a=(	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1,  closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
) and perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

!!!!hgraph_is_closed: (0,1)

++++ushape_assign_null: apply perm=[dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
] and anon=[]

++++ushape_assign_null: after fold: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}
	scons_0_0 [label="[NULL]"] ;

===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)

++++ushape_assign_null returns: after dimperm: 	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


****shape_assign_texpr_array returns:<file:f_36.shp>


====shape_pcons_of_texpr: with dim=(1,4), e=(cast_f,n(x1)), type=(8)

****shape_assign_texpr_array: with assign=[x3 := cast_f,n(x1),  ]
  on <file:f_37.shp>


====ushape_assign_passign: with passign=(x3 := x1->next)

 singleton 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


 remove_pattern_n2p 

key->type 3 
key->segm[0] 1 


 remove_pattern_n2p returns 


 remove_pattern_n2p 

key->type 0 
key->segm[0] 1 


 remove_pattern_n2p returns 


 singleton returns: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}


 expand returns 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

===== ushape_apply_dimperm: with perm=(dimperm: size=3
 0 ->  0
 1 ->  1
 2 ->  2
)
	 split: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_add dimensions: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_add dimensions returns: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 actually split: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 2 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 pattern: 

 type 3 segment 1 	 pattern: 

 type 0 segment 1 	 econs_aux : 
polyhedron of dim (9,0)
array of constraints of size 5
 0: -x2 + x4 >= 0
 1: x7 - 1 >= 0
 2: x6 - 2 >= 0
 3: x2 - x3 >= 0
 4: x0 - x2 - 1 >= 0

	 split patterns of : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 1 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

 resulting: 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n2] - 1 >= 0
 1: l[n1] - 2 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n1],
 y2 >= y1,
 l[n1] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 6
 0: -y1 + y2 >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 1 >= 0
 3: l[n1] - 2 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n1], l[n1] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n1) + d(y1) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 5
 0: -d(y1) + d(y2) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 5
 0: -d(n2) + d(y1) >= 0
 1: l[n2] - 2 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 n1_pat_set.size is 2 

	 n1 = 1 j= 0 
	 w.r.t. pattern: 

 add_pattern_n2p 

key->type 3 


 add_pattern_n2p returns 

	 pattern: 

 type 3 segment 1 	 => aux : 
polyhedron of dim (13,0)
array of constraints of size 7
 0: -x9 + x10 >= 0
 1: -x11 + x12 >= 0
 2: x9 - 1 >= 0
 3: x7 - 1 >= 0
 4: x6 - 2 >= 0
 5: x2 - x3 >= 0
 6: x0 - x2 - 1 >= 0


 	 temp_data after y1 - 1 = 0 and dy1 - dn2 = 0 : 
polyhedron of dim (13,0)
array of constraints of size 8
 0: -x4 + x11 = 0
 1: x9 - 1 = 0
 2: -x4 + x12 >= 0
 3: x10 - 1 >= 0
 4: x7 - 1 >= 0
 5: x6 - 2 >= 0
 6: x2 - x3 >= 0
 7: x0 - x2 - 1 >= 0


 	 temp_data after removed y1 and dy1 
polyhedron of dim (11,0)
array of constraints of size 6
 0: -x4 + x10 >= 0
 1: x9 - 1 >= 0
 2: x7 - 1 >= 0
 3: x6 - 2 >= 0
 4: x2 - x3 >= 0
 5: x0 - x2 - 1 >= 0


 	 temp_data after incremeted y1 
polyhedron of dim (11,0)
array of constraints of size 6
 0: -x4 + x10 >= 0
 1: x9 - 1 >= 0
 2: x7 - 1 >= 0
 3: x6 - 2 >= 0
 4: x2 - x3 >= 0
 5: x0 - x2 - 1 >= 0


 add_pattern_n2p 

key->type 0 


 add_pattern_n2p returns 

	 pattern: 

 type 0 segment 3 	 => aux : 
polyhedron of dim (11,0)
array of constraints of size 6
 0: -x4 + x10 >= 0
 1: x9 - 1 >= 0
 2: x7 - 1 >= 0
 3: x6 - 2 >= 0
 4: x2 - x3 >= 0
 5: x0 - x2 - 1 >= 0


 remove_pattern_n2p 

key->type 3 
key->segm[0] 1 


 remove_pattern_n2p returns 


	 n1 = 1 j= 1 
	 w.r.t. pattern: 
	 pattern: 

 type 0 segment 1 	 => aux : 
polyhedron of dim (11,0)
array of constraints of size 6
 0: -x2 + x10 >= 0
 1: x9 - 1 >= 0
 2: x7 - 1 >= 0
 3: x6 - 2 >= 0
 4: x2 - x3 >= 0
 5: x0 - x2 - 1 >= 0


 remove_pattern_n2p 

key->type 0 
key->segm[0] 1 


 remove_pattern_n2p returns 

	 split before update lenghts : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: -d(n1) + d(n3) >= 0
 1: l[n2] - 1 >= 0
 2: l[n1] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 6
 0: -d(n1) + d(n3) >= 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 2 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: -d(n1) + d(n3) >= 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: l[n1] - 2 >= 0
 4: d(n1) - d(y1) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 8
 0: -d(n1) + d(n3) >= 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: y1 - 1 >= 0
 4: l[n2] - 1 >= 0
 5: l[n1] - 2 >= 0
 6: d(n1) - d(n2) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 7
 0: -d(n1) + d(y1) >= 0
 1: -d(n1) + d(n3) >= 0
 2: y1 - 1 >= 0
 3: l[n2] - 1 >= 0
 4: l[n1] - 2 >= 0
 5: d(n1) - d(n2) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

	 split returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(n2) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n2) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n3) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n2) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


 expand returns 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(n2) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n2) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n3) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n2) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

===== ushape_apply_dimperm: with perm=(dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  2
)

====shape_dimperm_copy: 
===src: dimperm: size=4
 0 ->  0
 1 ->  1
 2 ->  3
 3 ->  2

===dst: dimperm: size=5
 0 ->  0
 1 ->  1
 2 ->  2
 3 ->  4
 4 ->  3

  
	 ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(n2) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n2) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n3) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n2) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 actually ucons_permute: 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(n2) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 2 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n3) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n2) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n3) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n2) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 node to pattern : 


	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n3) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

  
	 ucons_permute returns : 

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
 5: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 2 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
 6: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 9
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: y1 - 1 >= 0
 5: l[n3] - 1 >= 0
 6: l[n2] - 1 >= 0
 7: d(n1) - d(n3) >= 0
 8: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 8
 0: l[n1] - 1 = 0
 1: -d(n1) + d(y1) >= 0
 2: -d(n1) + d(n2) >= 0
 3: y1 - 1 >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
 7: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}


****shape_assign_texpr_array returns:<file:f_38.shp>


vvvvv post(inv):<file:f_39.shp>


	shape_is_leq: args <file:f_40.shp>
 and <file:f_41.shp>

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=4)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n3] - 1 >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n3],
 y2 >= y1,
 l[n3] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n3], l[n3] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n3) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	pattern_30 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_30 [label=<<table><tr><td>ucons30: polyhedron of dim (13,0)
array of constraints of size 7
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n3] - 1 >= 0
 5: l[n2] - 1 >= 0
 6: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_30 -> ucons_30 [label = implies ];
	pattern_40 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_40 [label=<<table><tr><td>ucons40: polyhedron of dim (11,0)
array of constraints of size 6
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n3] - 1 >= 0
 4: l[n2] - 1 >= 0
 5: d(n1) - d(n3) >= 0
</td></tr></table>> ] ;
	pattern_40 -> ucons_40 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 4, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n3) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	h_0_n3 [label=" n3 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;
	h_0_n3 -> h_0_n1;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -y1 + y2 >= 0
 2: -d(y1) + d(y2) >= 0
 3: l[n2] - 1 >= 0
 4: d(n1) - d(n2) >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 1 >= 0
 3: d(n1) - d(y1) >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

 ucons_leq returns false
+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=2)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (5,0)
array of constraints of size 1
 0: l[n1] - 1 = 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 2, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;

+++++ushape_is_leq: returns 0

+++++ushape_is_leq: on a1=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: l[n2] - 1 >= 0
 2: d(n1) - d(n2) >= 0
 3: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(y1) + d(y2) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(n2) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n2) + d(y1) >= 0
 2: l[n2] - 2 >= 0
 3: d(n1) - d(y1) >= 0
 4: x0 - d(n1) - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}
) <= a2=(	color = black ;
	label = "ushape of dim (1,4)" ;
	subgraph cluster_hgraph_0 {
 	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

	}

	subgraph cluster_ucons_0 {
	node [shape=Mrecord] ;
	label = "ucons 0 of (datadim=1, segmdim=3)" ;

	subgraph cluster_econs_0 {
	node [shape=Mrecord] ;
	 ucons_econs_0 [label=<<table><tr><td>econs: polyhedron of dim (7,0)
array of constraints of size 3
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	}

	subgraph cluster_formulas_0{
	node [shape=Mrecord] ;
	pattern_10 [label=<<table><tr><td> forall y1, y2. 
 y1, y2 in [n2],
 y2 >= y1,
 l[n2] >= 2 </td></tr></table>> ] ;
	ucons_10 [label=<<table><tr><td>ucons10: polyhedron of dim (11,0)
array of constraints of size 5
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -y1 + y2 >= 0
 3: -d(y1) + d(y2) >= 0
 4: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_10 -> ucons_10 [label = implies ];
	pattern_20 [label=<<table><tr><td> forall y1. 
 y1 in [n2], l[n2] >= 2 </td></tr></table>> ] ;
	ucons_20 [label=<<table><tr><td>ucons20: polyhedron of dim (9,0)
array of constraints of size 4
 0: l[n1] - 1 = 0
 1: -d(n1) + d(n2) >= 0
 2: -d(n2) + d(y1) >= 0
 3: l[n2] - 1 >= 0
</td></tr></table>> ] ;
	pattern_20 -> ucons_20 [label = implies ];
	}
	}

)
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n0) */
	/* x4(n2) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 x3 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 ]" ] ;
	h_0_n2 [label=" n2 |  x4^(0) | [ x4 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n0;
	h_0_n2 -> h_0_n1;
	node [shape=Mrecord] ;
	label="hgraph 0 of size 3, ptrdim 4, datadim 1, not closed" ;
	/* x1(n1) */
	/* x2(n0) */
	/* x3(n2) */
	/* x4(n1) */
	/* nodes and their labels */
	h_0_n0 [label=" n0(#) |  NULL | [ x2 ]" ] ;
	h_0_n1 [label=" n1 |  x1^(0) | [ x1 x4 ]" ] ;
	h_0_n2 [label=" n2 |  x3^(0) | [ x3 ]" ] ;
	/* succ matrix */
	h_0_n0 -> h_0_n0;
	h_0_n1 -> h_0_n2;
	h_0_n2 -> h_0_n0;

+++++ushape_is_leq: returns 0

	shape_is_leq: returns 0

vvvvv post(inv) => inv: not satisfied (ERROR)

all tests passed
