# Makefile
#
# APRON Library / Shape Domain
#
# Copyright (C) LIAFA 2009

# This file is part of the APRON Library, released under LGPL license.
# Please read the COPYING file packaged in the distribution.

include /home/cezara/tools/new_cinv/Makefile.config

PREFIX = ../..

# C include and lib directories
INCDIR = $(PREFIX)/include
LIBDIR = $(PREFIX)/lib
BINDIR = $(PREFIX)/bin

SRCDIR = $(shell pwd)

#---------------------------------------
# Programs
#---------------------------------------

# Library creation
SHARED = $(CC) -shared

#---------------------------------------
# Flags
#---------------------------------------

# Use ICFLAGS to specify machine-independent compilation flags.
ICFLAGS = \
-I$(APRON_PREFIX)/include \
-I$(MPFR_PREFIX)/include -I$(GMP_PREFIX)/include \
-I$(CAML_PREFIX)/lib/ocaml -I$(CAMLIDL_PREFIX)/lib/ocaml 

# Caml
OCAMLINC = -I $(APRON_PREFIX)/apron/mlgmpidl -I $(APRON_PREFIX)/apron/mlapronidl -I $(APRON_PREFIX)/lib

# lsum
LSUM_OPT = rel
#LSUM_OPT = prd

#ucons

#---------------------------------------
# Files
#---------------------------------------

HGRAPH_CCSOURCES = ap_pcons0.c ap_passign0.c apron2shape.c \
	    hgraph_print.c hgraph_transfer.c hgraph_closure.c hgraph_nary.c \
	    hgraph_representation.c hgraph_predicate.c hgraph_resize.c 

UCONS_CCSOURCES = ucons_print.c ucons_transfer.c ucons_closure.c ucons_nary.c \
	    ucons_representation.c ucons_predicate.c ucons_resize.c 

LSUM_CCSOURCES = lsum_print.c lsum_transfer.c lsum_closure.c lsum_nary.c \
	    lsum_representation.c lsum_predicate.c lsum_resize.c 
	    
USHAPE_CCSOURCES = $(HGRAPH_CCSOURCES) \
	    ushape_print.c ushape_transfer.c ushape_closure.c ushape_nary.c \
	    ushape_representation.c ushape_predicate.c ushape_resize.c 
	    
CCSOURCES = $(USHAPE_CCSOURCES) \
	    shape_print.c shape_transfer.c shape_closure.c shape_nary.c \
	    shape_representation.c shape_predicate.c shape_resize.c 

CCINC = hgraph.h hgraph_internal.h hgraph_fun.h \
	ucons.h ucons_internal.h ucons_fun.h \
	lsum.h lsum_internal.h lsum_fun.h \
	ushape.h ushape_internal.h ushape_fun.h \
	shape.h shape_internal.h shape_fun.h \
	shape_manager.h shape_options.h apron2shape.h ap_pcons0.h ap_passign0.h


# trigers a whole recompilation
#DEPS = $(APRON_PREFIX)/include/ap_abstract0.h

#---------------------------------------
# Rules
#---------------------------------------

root:
	@echo
	@echo "Please choose a target from:"
	@echo
	@echo " Hl UCLoctDoctl UCLoctDpolyl SEpolyULoctUC1l SEpolyULoct: single C library"
	@echo " all                     : all C libraries"
	@echo " ml                      : OCaml library"
	@echo " allml                   : everything"
	@echo " install                 : to install what has been compiled"
	@echo " indent                  : to indent C sources"
	@echo " clean                   : remove objects"
	@echo " distclean               : clean & uninstall"
	@echo " mostyleclean            : remove objects & autogenerated"
	@echo " rebuild                 : rebuild autogenerated "
	@echo

all: Hl LSumRel LSumPrd UConsOctP11 UConsOctP12 UConsOctP21 UConsPolyP11 UConsPolyP12 UConsPolyP21 Sl UlP11 UlP12 UlP21 alltest
allml: ml

Hl: libhgraph.a libhgraph_debug.a 

UConsPolyP11: libuconspolyp11.a libuconspolyp11_debug.a

UConsPolyP12: libuconspolyp12.a libuconspolyp12_debug.a

UConsPolyP21: libuconspolyp21.a libuconspolyp21_debug.a

UConsOctP11: libuconsoctp11.a libuconsoctp11_debug.a

UConsOctP12: libuconsoctp12.a libuconsoctp12_debug.a

UConsOctP21: libuconsoctp21.a libuconsoctp21_debug.a

LSumRel: liblsumrel.a liblsumrel_debug.a

LSumPrd: liblsumprd.a liblsumprd_debug.a

Sl: libshapelsumprd.a libshapelsumprd_debug.a libshapelsumrel.a libshapelsumrel_debug.a

UlP11: libshapeuconsoctp11.a libshapeuconsoctp11_debug.a libshapeuconspolyp11.a libshapeuconspolyp11_debug.a 

UlP12: libshapeuconsoctp12.a libshapeuconsoctp12_debug.a libshapeuconspolyp12.a libshapeuconspolyp12_debug.a

UlP21: libshapeuconsoctp21.a libshapeuconsoctp21_debug.a libshapeuconspolyp21.a libshapeuconspolyp21_debug.a
    
alltest: hgraphtest shapetest shapetestUCOP11 shapetestUCPP11 shapetestUCOP12 shapetestUCPP12 shapetestUCOP21 shapetestUCPP21

clean:
	/bin/rm -f *.[ao] *.so *_debug.[ao] hgraphtest shapetest*
	/bin/rm -f *.?.tex *.log *.aux *.bbl *.blg *.toc *.dvi *.ps *.pstex*
	/bin/rm -fr *.cm[ioax] *.cmxa
	/bin/rm -fr shapetop* shaperun* tmp
	/bin/rm -fr *~ \#*\# *.BAK f_*.shp

mostlyclean: clean
	/bin/rm -fr *_caml.c *.mli

install:
	$(INSTALLd) $(INCDIR) $(INCDIR)/shape $(LIBDIR) $(BINDIR)
	$(INSTALL) shape.h $(INCDIR)
	$(INSTALL) $(CCINC) $(INCDIR)/shape
	for i in libshape*.* libshape*_debug.* libshape_caml.* shape.idl; do \
		if test -f $$i; then $(INSTALL) $$i $(LIBDIR); fi; \
	done
	for i in shapetest?? shapetop?? shaperun??; do \
		if test -f $$i; then $(INSTALL) $$i $(BINDIR); fi; \
	done
	for i in shape.mli shape.cmi shape.cma shape.cmxa shape.a; do \
		if test -f $$i; then $(INSTALL) $$i $(LIBDIR); fi; \
	done

uninstall:
	/bin/rm -fr $(INCDIR)/shape
	/bin/rm -f $(BINDIR)/shapetest?? $(BINDIR)/shapetop?? $(BINDIR)/shaperun??
	/bin/rm -f $(LIBDIR)/libshape*.* $(LIBDIR)/libshape*_debug.* $(LIBDIR)/libshape_caml.a
	/bin/rm -f $(LIBDIR)/shape.mli $(LIBDIR)/shape.cmi $(LIBDIR)/shape.idl $(LIBDIR)/shape.cma $(LIBDIR)/shape.cmxa $(LIBDIR)/shape.a
	/bin/rm -f Makefile.depend

distclean: uninstall
	/bin/rm -f Makefile.depend

dist: Makefile COPYING README shape_doc.html sedscript_caml sedscript_c $(CCSOURCES) $(CCINC) shape.h shape_test.c shape.idl shape.mli shape.ml shape_caml.c
	(cd ..; tar zcvf shapes.tgz $(^:%=shapes/%))

indent: $(CCSOURCES) $(CCINC)
	for i in $(CCSOURCES) $(CCINC); do \
		echo "* indent $$i"; indent -bl -i2 $$i; \
	done

#-----------------------------------
# C part
#-----------------------------------

# hgraph_*
#
libhgraph.a: $(subst .c,.o,$(HGRAPH_CCSOURCES))
		$(AR) rcs $@ $^
		$(RANLIB) $@

libhgraph_debug.a: $(subst .c,_debug.o,$(HGRAPH_CCSOURCES))
	$(AR) rcs $@ $^
	$(RANLIB) $@

libhgraph.so: $(subst .c,.o,$(HGRAPH_CCSOURCES))
	$(SHARED) -o $@ $^

hgraphtest: libhgraph_debug.a hgraph_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ hgraph_test_debug.o \
	-L. -lhgraph_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmp \
	-lm

# ucons_*
#
libucons%.a: $(subst .c,ucons%.o,$(UCONS_CCSOURCES))
		$(AR) rcs $@ $^
		$(RANLIB) $@

libucons%_debug.a: $(subst .c,ucons%_debug.o,$(UCONS_CCSOURCES))
		$(AR) rcs $@ $^
		$(RANLIB) $@

libucons%.so: $(subst .c,ucons%.o,$(UCONS_CCSOURCES))
		$(SHARED) -o $@ $^

%uconspolyp11.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P11 -c -o $@ $<
		
%uconspolyp12.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P12 -c -o $@ $<

%uconspolyp21.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P21 -c -o $@ $<
		
%uconspolyp11_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P11 -c -o $@ $<
		
%uconspolyp12_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P12 -c -o $@ $<
		
%uconspolyp21_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_POLY_P21 -c -o $@ $<

%uconsoctp11.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P11 -c -o $@ $<

%uconsoctp12.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P12 -c -o $@ $<
		
%uconsoctp21.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P21 -c -o $@ $<

%uconsoctp11_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P11 -c -o $@ $<

%uconsoctp12_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P12 -c -o $@ $<
		
%uconsoctp21_debug.o: %.c $(CCINC) $(DEPS)
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_UCONS -DUCONS_DCONS_OCT_P21 -c -o $@ $<

uconstest%: libucons%_debug.a ucons_test.o
		$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ ucons_test.o \
		-L. -lucons$*_debug \
		-L../newpolka -lpolkaMPQ_debug \
		-L../apron -lapron_debug \
		-L$(MPFR_PREFIX)/lib -lmpfr \
		-L$(GMP_PREFIX)/lib -lgmp \
		-lm

# lsum_*
#
liblsum%.a: $(subst .c,lsum%.o,$(LSUM_CCSOURCES))
		$(AR) rcs $@ $^
		$(RANLIB) $@

liblsum%_debug.a: $(subst .c,lsum%_debug.o,$(LSUM_CCSOURCES))
		$(AR) rcs $@ $^
		$(RANLIB) $@

liblsum%.so: $(subst .c,lsum%.o,$(LSUM_CCSOURCES))
		$(SHARED) -o $@ $^

%lsumrel.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_LSUM -DLSUM_REL -c -o $@ $<

%lsumrel_debug.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_LSUM -DLSUM_REL -c -o $@ $<

%lsumprd.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS) $(ICFLAGS) -DSHAPE_SCONS_LSUM -c -o $@ $<

%lsumprd_debug.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -DSHAPE_SCONS_LSUM -c -o $@ $<


# shape_*
#
libshape%.a: $(subst .c,%.o,$(CCSOURCES))
	$(AR) rcs $@ $^
	$(RANLIB) $@

libshape%_debug.a: $(subst .c,%_debug.o,$(CCSOURCES))
	$(AR) rcs $@ $^
	$(RANLIB) $@

libshape%.so: $(subst .c,%.o,$(CCSOURCES))
	$(SHARED) -o $@ $^

shapetest: libshapelsum$(LSUM_OPT)_debug.a liblsum$(LSUM_OPT)_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapelsum$(LSUM_OPT)_debug -llsum$(LSUM_OPT)_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD -lpolka_debug \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm 

shapetestUCOP11: libshapeuconsoctp11_debug.a libuconsoctp11_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconsoctp11_debug -luconsoctp11_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm

shapetestUCPP11: libshapeuconspolyp11_debug.a libuconspolyp11_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconspolyp11_debug -luconspolyp11_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD -lpolka_debug \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm
	
shapetestUCOP12: libshapeuconsoctp12_debug.a libuconsoctp12_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconsoctp12_debug -luconsoctp12_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm

shapetestUCPP12: libshapeuconspolyp12_debug.a libuconspolyp12_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconspolyp12_debug -luconspolyp12_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD -lpolka_debug \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm

shapetestUCOP21: libshapeuconsoctp21_debug.a libuconsoctp21_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconsoctp21_debug -luconsoctp21_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm

shapetestUCPP21: libshapeuconspolyp21_debug.a libuconspolyp21_debug.a shape_test_debug.o
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -o $@ shape_test_debug.o \
	-L. -lshapeuconspolyp21_debug -luconspolyp21_debug \
	-L$(APRON_PREFIX)/lib -lapron_debug -lbox -loctD -lpolka_debug \
	-L$(MPFR_PREFIX)/lib -lmpfr \
	-L$(GMP_PREFIX)/lib -lgmpxx -lgmp \
	-lm


#---------------------------------------
# IMPLICIT RULES AND DEPENDENCIES
#---------------------------------------

.SUFFIXES: .tex .c .h .a .o .so


%_caml.o: %_caml.c $(CCINC) $(DEPS) lib%.a
	$(CC) $(CFLAGS) $(ICFLAGS) -c -o $@ $<

%.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS) $(ICFLAGS) -c -o $@ $<

%_debug.o: %.c $(CCINC) $(DEPS)
	$(CC) $(CFLAGS_DEBUG) $(ICFLAGS) -c -o $@ $<

.PRECIOUS: liblsum%.a libucons%.a libshape%.a libshape%_debug.a libshape%.so 


#-----------------------------------
# Caml part
#-----------------------------------

ml: shape.mli shape.cmi shape.cma shape.cmxa libshape_caml.a

shape.cma: shape.cmi shape.cmo libshape_caml.a
	$(OCAMLC) $(OCAMLFLAGS) $(OCAMLINC) -custom -a -o $@ \
	shape.cmo \
	-ccopt "-L$(APRON_PREFIX)/lib" -cclib "-lshape_caml"

shape.cmxa shape.a: shape.cmi shape.cmx libshape_caml.a
	$(OCAMLOPT) $(OCAMLOPTFLAGS) $(OCAMLINC) -a -o $@ \
	shape.cmx \
	-ccopt "-L$(APRON_PREFIX)/lib" -cclib "-lshape_caml"
	$(RANLIB) shape.a

libshape_caml.a: shape_caml.o 
	$(AR) rcs $@ $^
	$(RANLIB) $@

libshape_caml.so: shape_caml.o
	$(SHARED) -o $@ $^

mltest: mltest.ml shape.cma
	$(OCAMLC) -I $(APRON_PREFIX)/lib -I . gmp.cma apron.cma shape.cma mltest.ml \
	-cclib -lshape -cclib -lapron

#---------------------------------------
# IDL rules
#---------------------------------------


# generates XXX.ml, XXX.mli, XXX_caml.c from XXX.idl
rebuild: hgraph.idl ushape.idl shape.idl
	mkdir -p tmp
	cp $(APRON_PREFIX)/apron/mlapronidl/*.idl tmp
	cp *.idl tmp/
	for i in hgraph ushape shape; do \
		cd tmp ; $(CAMLIDL) -no-include -nocpp -I . $$i.idl ; cd ../ ; \
		$(SED) -f sedscript_caml tmp/$$i.ml >$$i.ml ; \
		$(SED) -f sedscript_caml tmp/$$i.mli >$$i.mli ; \
		$(SED) -f sedscript_c tmp/$$i_stubs.c >$$i_caml.c ; \
        done

.PRECIOUS: %_caml.c %.ml %.mli %.cmi libshape%_caml.a libshape%_caml.so shape.cmx shape.cmo

#---------------------------------------
# ML generic rules
#---------------------------------------

%.cmi: %.mli  $(DEPS)
	$(OCAMLC) $(OCAMLFLAGS) $(OCAMLINC) -c $<

%.cmo: %.ml %.cmi  $(DEPS)
	$(OCAMLC) $(OCAMLFLAGS) $(OCAMLINC) -c $<

%.cmx: %.ml %.cmi  $(DEPS)
	$(OCAMLOPT) $(OCAMLOPTFLAGS) $(OCAMLINC) -c $<



#-----------------------------------
# DEPENDENCIES
#-----------------------------------
