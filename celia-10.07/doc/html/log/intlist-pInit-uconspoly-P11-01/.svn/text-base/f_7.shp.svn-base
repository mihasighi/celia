shape of size (2) and dim(3,10)

***ushape 0:

ushape of dim (3,10)
	HGraphs table of size 8
hgraph of size 3, ptrdim 10, datadim 3, not closed
succ matrix:
	n0 -> n0
	n1 -> n2
	n2 -> n0
ptr vars labels for nodes:
	x3 ->next^0-> n0
	x9 ->next^0-> n1
	x11 ->next^0-> n2
ptr var to node:  x8(n0),  x9(n1),  x10(n0),  x11(n2),  x12(n0), 

closed bottom
{segment constraints:
ucons of [datadim=3, ptrdim=3] 
polyhedron of dim (9,0)
array of constraints of size 4
 0: -l0 + l[n01] + l[n02] = 0
 1: d(n02) = 0
 2: l[n01] - 1 >= 0
 3: l0 - l[n01] - 1 >= 0
 /\ y1 in [n01], l[n01]>=2  ==> polyhedron of dim (11,0)
array of constraints of size 4
 0: -l0 + l[n01] + l[n02] = 0
 1: d(n02) = 0
 2: l[n01] - 1 >= 0
 3: l0 - l[n01] - 1 >= 0
 /\ y1 in [n02], l[n02]>=2  ==> polyhedron of dim (11,0)
array of constraints of size 6
 0: -l0 + l[n01] + l[n02] = 0
 1: d(y1) = 0
 2: d(n02) = 0
 3: y1 - 1 >= 0
 4: l[n01] - 1 >= 0
 5: l0 - l[n01] - y1 - 1 >= 0
}

***ushape 1:

ushape of dim (3,10)
	HGraphs table of size 8
hgraph of size 4, ptrdim 10, datadim 3, not closed
succ matrix:
	n0 -> n0
	n1 -> n3
	n2 -> n0
	n3 -> n2
ptr vars labels for nodes:
	x3 ->next^0-> n0
	x9 ->next^0-> n1
	x10 ->next^0-> n2
	x11 ->next^0-> n3
ptr var to node:  x8(n0),  x9(n1),  x10(n2),  x11(n3),  x12(n0), 

closed bottom
{segment constraints:
ucons of [datadim=3, ptrdim=4] 
polyhedron of dim (11,0)
array of constraints of size 5
 0: -l0 + l[n01] + l[n02] + l[n03] = 0
 1: d(n03) = 0
 2: l[n02] - 1 >= 0
 3: l[n01] - 1 >= 0
 4: l0 - l[n01] - l[n02] - 1 >= 0
 /\ y1 in [n01], l[n01]>=2  ==> polyhedron of dim (13,0)
array of constraints of size 5
 0: -l0 + l[n01] + l[n02] + l[n03] = 0
 1: d(n03) = 0
 2: l[n02] - 1 >= 0
 3: l[n01] - 1 >= 0
 4: l0 - l[n01] - l[n02] - 1 >= 0
 /\ y1 in [n02], l[n02]>=2  ==> polyhedron of dim (13,0)
array of constraints of size 5
 0: -l0 + l[n01] + l[n02] + l[n03] = 0
 1: d(n03) = 0
 2: l[n02] - 1 >= 0
 3: l[n01] - 1 >= 0
 4: l0 - l[n01] - l[n02] - 1 >= 0
 /\ y1 in [n03], l[n03]>=2  ==> polyhedron of dim (13,0)
array of constraints of size 7
 0: -l0 + l[n01] + l[n02] + l[n03] = 0
 1: d(y1) = 0
 2: d(n03) = 0
 3: y1 - 1 >= 0
 4: l[n02] - 1 >= 0
 5: l[n01] - 1 >= 0
 6: l0 - l[n01] - l[n02] - y1 - 1 >= 0
}
