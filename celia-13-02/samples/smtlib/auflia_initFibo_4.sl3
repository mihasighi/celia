(set-logic AUFLIA)
(define-sort Node () (Array Int Int) )
(declare-fun len (Node) Int)
(declare-fun Gall (Int Node) Bool)
(declare-fun Gle2 (Int Int Node) Bool)
(declare-fun Gsucc2 (Int Int Node) Bool)
(declare-fun Gfst (Int Node) Bool)
(declare-fun Glst (Int Node) Bool)
(declare-fun Geq2 (Int Node Int Node) Bool)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun n0 () Node)
(declare-fun n1 () Node)
(assert (and 		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )

        (forall ((?y1 Int) (?y2 Int))
		(=> (Gsucc2 ?y1 ?y2 n1)
		(and 
		(= 0 (- (+  ?y2  0 )  (+  ?y1 1) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+   (select n1 ?y2)   0 )  (+  ?y1   (select n1 ?y1)  ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+  ?y1 2) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )
		)
) ) 
        (forall ((?y1 Int))
		(=> (Glst ?y1 n1)
		(and 
		(= 0 (- (+  ?y1 1)  (+  (len n1)  0 ) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(= 0 (- (+  x0   (select n1 ?y1)  )  (+  x1  0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )
		)
) )
) )
(assert (not (and 		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )

	(forall ((?y1 Int) (?y2 Int))
		(=> (Gsucc2 ?y1 ?y2 n1)
		     (and 		(= 0 (- (+  ?y2  0 )  (+  ?y1 1) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+   (select n1 ?y2)   0 )  (+  ?y1   (select n1 ?y1)  ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+  ?y1 2) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )
)
		))

	(forall ((?y1 Int))
		(=> (Glst ?y1 n1)
		     (and 		(= 0 (- (+  ?y1 1)  (+  (len n1)  0 ) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(= 0 (- (+  x0   (select n1 ?y1)  )  (+  x1  0 ) ) )
		(<= 0 (- (+ (* 2 x1 ) 2)  (+ (* 3 x0 )  (len n1) ) ) )
		(<= 0 (- (+  (len n1)  0 )  (+ 3 0 ) ) )
		(<= 0 (- (+ (* 2 x0 ) 2)  (+  x1  (len n1) ) ) )
)
		))
)))
(check-sat)
