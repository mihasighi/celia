(set-logic AUFLIA)
(define-sort Node () (Array Int Int) )
(declare-fun len (Node) Int)
(declare-fun Gall (Int Node) Bool)
(declare-fun Gle2 (Int Int Node) Bool)
(declare-fun Gsucc2 (Int Int Node) Bool)
(declare-fun Gfst (Int Node) Bool)
(declare-fun Glst (Int Node) Bool)
(declare-fun Geq2 (Int Node Int Node) Bool)
(declare-fun n1 () Node)
(assert (and 	
 		(= 0 (- (select n1 0)  2 ) )
		(<= 0 (- (len n1) 3) )
		(forall ((?y1 Int) (?y2 Int))
		(=> (Gsucc2 ?y1 ?y2 n1)
		    (<= 0 (- (select n1 ?y2) (+  ?y1   (select n1 ?y1)  ) ) )
		)) 
		(forall ((?y1 Int))
		(=> (Gfst ?y1 n1)
		    (<= 0 (- (select n1 ?y1) (select n1 0) ) )
		)) 
))
(assert (not (and
 		(= 0 (- (select n1 0)  2 ) )
		(<= 0 (- (len n1) 3) )
		(forall ((?y1 Int) (?y2 Int))
		(=> (Gle2 ?y1 ?y2 n1)
		    (and
			(<= 0 (- (select n1 ?y2) (select n1 ?y1)  ) )
			(<= 0 (- (select n1 ?y1) (select n1 0)  ) )
		    )
		))
)))
(check-sat)
