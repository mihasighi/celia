(set-logic AUFLIA)
(define-sort Node () (Array Int Int) )
(declare-fun len (Node) Int)
(declare-fun Gall (Int Node) Bool)
(declare-fun Gle2 (Int Int Node) Bool)
(declare-fun Gsucc2 (Int Int Node) Bool)
(declare-fun Gfst (Int Node) Bool)
(declare-fun Glst (Int Node) Bool)
(declare-fun Geq2 (Int Node Int Node) Bool)
(declare-fun x0 () Int)
(declare-fun x1 () Int)
(declare-fun n0 () Node)
(declare-fun n1 () Node)
(declare-fun n2 () Node)
(assert (and 		(= 0 (- (+  (len n2)  0 )  (+ 1 0 ) ) )
		(= 0 (- (+  (len n1)  0 )  (+ 1 0 ) ) )
		(= 0 (- (+  (select n2 0)  0 )  (+ 3 0 ) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(= 0 (- (+  x1  0 )  (+ 8 0 ) ) )
		(= 0 (- (+  x0  0 )  (+ 5 0 ) ) )

) )
(assert (not (and 		(= 0 (- (+  (len n2)  0 )  (+ 1 0 ) ) )
		(= 0 (- (+  (len n1)  0 )  (+ 1 0 ) ) )
		(= 0 (- (+  (select n2 0)  0 )  (+ 3 0 ) ) )
		(= 0 (- (+  (select n1 0)  0 )  (+ 2 0 ) ) )
		(= 0 (- (+  x1  0 )  (+ 8 0 ) ) )
		(= 0 (- (+  x0  0 )  (+ 5 0 ) ) )
)))
(check-sat)
